<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Farm Management Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        :root {
            --primary: #3498db;
            --primary-dark: #2980b9;
            --secondary: #2c3e50;
            --secondary-light: #34495e;
            --accent: #48BB78;
            --error: #e74c3c;
            --bg-light: #f4f4f9;
            --text-light: #ecf0f1;
            --text-dark: #2c3e50;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--bg-light);
            color: var(--text-dark);
            line-height: 1.6;
        }

        /* Drawer Styles */
        .drawer {
            height: 100%;
            width: 280px;
            position: fixed;
            top: 0;
            left: -280px;
            background-color: var(--secondary);
            overflow-x: hidden;
            transition: var(--transition);
            z-index: 1000;
            box-shadow: var(--shadow);
        }

        .drawer.open {
            left: 0;
        }

        .drawer-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            background-color: var(--primary);
        }

        .drawer-header h2 {
            color: var(--text-light);
            font-size: 1.5rem;
            font-weight: 600;
        }

        .drawer-close {
            color: var(--text-light);
            font-size: 1.5rem;
            cursor: pointer;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: var(--transition);
        }

        .drawer-close:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .drawer-user {
            padding: 15px 20px;
            background-color: rgba(255, 255, 255, 0.05);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            color: var(--text-light);
        }

        .drawer-user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 15px;
        }

        .drawer-links {
            padding: 10px 0;
        }

        .drawer-category {
            color: rgba(255, 255, 255, 0.5);
            font-size: 0.8rem;
            text-transform: uppercase;
            padding: 15px 20px 5px;
        }

        .drawer a {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--text-light);
            text-decoration: none;
            transition: var(--transition);
            border-left: 3px solid transparent;
        }

        .drawer a:hover, .drawer a.active {
            background-color: rgba(255, 255, 255, 0.05);
            border-left-color: var(--primary);
        }

        .drawer a i {
            width: 24px;
            margin-right: 15px;
            text-align: center;
        }

        /* Header Styles */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            height: 70px;
            background-color: #fff;
            box-shadow: var(--shadow);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .menu-btn {
            background: none;
            border: none;
            color: var(--text-dark);
            font-size: 1.5rem;
            cursor: pointer;
            margin-right: 15px;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: var(--transition);
        }

        .menu-btn:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }

        .header h1 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-dark);
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .header-btn {
            background-color: transparent;
            border: none;
            color: var(--text-dark);
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
        }

        .header-btn i {
            font-size: 1rem;
        }

        .header-btn:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }

        .primary-btn {
            background-color: var(--primary);
            color: white;
        }

        .primary-btn:hover {
            background-color: var(--primary-dark);
        }

        .accent-btn {
            background-color: var(--accent);
            color: white;
        }

        .accent-btn:hover {
            background-color: #3da066;
        }

        .danger-btn {
            background-color: var(--error);
            color: white;
        }

        .danger-btn:hover {
            background-color: #c0392b;
        }

        /* Content Styles */
        .content {
            margin-left: 0;
            padding: 20px;
            transition: var(--transition);
        }

        .content.shifted {
            margin-left: 280px;
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .dashboard-card {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: var(--shadow);
        }

        .dashboard-card.welcome {
            grid-column: 1 / -1;
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .welcome-icon {
            width: 60px;
            height: 60px;
            background-color: rgba(52, 152, 219, 0.1);
            color: var(--primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .stats-card {
            display: flex;
            flex-direction: column;
        }

        .stats-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .stats-title {
            font-size: 0.9rem;
            color: #7f8c8d;
        }

        .stats-value {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--accent);
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: var(--secondary);
        }

        /* Form Styles */
        .form-card {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: var(--shadow);
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .input-field {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            transition: var(--transition);
        }

        .input-field:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }

        select.input-field {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 1em;
        }

        .error-text {
            color: var(--error);
            font-size: 0.85rem;
            margin-top: 5px;
        }

        /* Farm List Styles */
        .farm-item {
            background-color: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            margin-bottom: 15px;
        }

        .farm-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--secondary);
        }

        .farm-subtitle {
            font-size: 0.9rem;
            color: #7f8c8d;
            margin-bottom: 10px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        /* Motor Styles */
        .motor-container {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
        }

        .motor-item {
            background-color: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            margin-bottom: 15px;
        }

        .valve-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 10px;
            background-color: #f8f9fa;
            border-radius: 5px;
            margin-top: 8px;
        }

        /* Hidden sections */
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div id="drawer" class="drawer">
        <div class="drawer-header">
            <h2>Farm Management</h2>
            <span class="drawer-close" onclick="toggleDrawer()">
                <i class="fas fa-times"></i>
            </span>
        </div>
        <div class="drawer-user">
            <div class="drawer-user-avatar">A</div>
            <div>
                <div>Admin User</div>
                <small>Administrator</small>
            </div>
        </div>
        <div class="drawer-links">
            <div class="drawer-category">Dashboard</div>
            <a href="#" class="nav-link active" data-section="dashboard"><i class="fas fa-tachometer-alt"></i> Overview</a>
            <a href="#" class="nav-link" data-section="analytics"><i class="fas fa-chart-bar"></i> Analytics</a>

            <div class="drawer-category">Management</div>
            <a href="#" class="nav-link" data-section="users"><i class="fas fa-users"></i> Users</a>
            <a href="#" class="nav-link" data-section="create-farm"><i class="fas fa-plus-circle"></i> Create Farm</a>
            <a href="#" class="nav-link" data-section="farm-list"><i class="fas fa-leaf"></i> Farms</a>
            <a href="#" class="nav-link" data-section="farm-details"><i class="fas fa-info-circle"></i> Farm Details</a>
            <a href="#" class="nav-link" data-section="motors"><i class="fas fa-cog"></i> Motors</a>
            <a href="#" class="nav-link" data-section="valves"><i class="fas fa-tint"></i> Valves</a>

            <div class="drawer-category">System</div>
            <a href="#" class="nav-link" data-section="settings"><i class="fas fa-cog"></i> Settings</a>
            <a href="#" class="nav-link" data-section="help"><i class="fas fa-question-circle"></i> Help</a>
            <a href="#" onclick="logout()"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </div>

    <div class="header">
        <div class="header-left">
            <button class="menu-btn" onclick="toggleDrawer()">
                <i class="fas fa-bars"></i>
            </button>
            <h1>Farm Management Dashboard</h1>
        </div>
        <div class="header-right">
            <button class="header-btn" onclick="navigateToAdminSignup()">
                <i class="fas fa-user-plus"></i> New Admin
            </button>
            <button class="header-btn primary-btn" onclick="logout()">
                <i class="fas fa-sign-out-alt"></i> Logout
            </button>
        </div>
    </div>

    <div id="content" class="content">
        <!-- Dashboard Section -->
        <section id="dashboard-section" class="content-section">
            <div class="dashboard-grid">
                <div class="dashboard-card welcome">
                    <div class="welcome-icon">
                        <i class="fas fa-hand-wave"></i>
                    </div>
                    <div>
                        <h2>Welcome to the Farm Management Dashboard</h2>
                        <p>Manage your farms, motors, and valves from this central dashboard.</p>
                    </div>
                </div>

                <div class="dashboard-card stats-card">
                    <div class="stats-header">
                        <div class="stats-title">Total Farms</div>
                        <div class="stats-icon blue-icon">
                            <i class="fas fa-leaf"></i>
                        </div>
                    </div>
                    <div class="stats-value" id="total-farms">0</div>
                    <div class="stats-description">Registered farms in the system</div>
                </div>

                <div class="dashboard-card stats-card">
                    <div class="stats-header">
                        <div class="stats-title">Total Motors</div>
                        <div class="stats-icon green-icon">
                            <i class="fas fa-cog"></i>
                        </div>
                    </div>
                    <div class="stats-value" id="total-motors">0</div>
                    <div class="stats-description">Active motors across all farms</div>
                </div>

                <div class="dashboard-card stats-card">
                    <div class="stats-header">
                        <div class="stats-title">Total Valves</div>
                        <div class="stats-icon orange-icon">
                            <i class="fas fa-tint"></i>
                        </div>
                    </div>
                    <div class="stats-value" id="total-valves">0</div>
                    <div class="stats-description">Irrigation valves deployed</div>
                </div>
            </div>

            <div class="dashboard-card" id="recent-activity">
                <h3 class="section-title">Recent Activity</h3>
                <div id="activity-list">
                    <p>Loading recent activities...</p>
                </div>
            </div>
        </section>

        <!-- Create Farm Section -->
        <section id="create-farm-section" class="content-section hidden">
            <h2 class="section-title">Create/Edit Farm</h2>
            <div class="form-card">
                <div class="form-grid">
                    <input type="hidden" id="farm-edit-id">
                    <div class="form-group">
                        <input type="text" id="farm-name" placeholder="Farm Name" class="input-field">
                    </div>
                    <div class="form-group">
                        <input type="text" id="farm-location" placeholder="Location" class="input-field">
                    </div>
                    <div class="form-group">
                        <select id="farm-owner" class="input-field">
                            <option value="">Select Owner</option>
                        </select>
                        <div id="owner-error" class="error-text"></div>
                    </div>
                </div>

                <div id="motors-container" class="motor-container">
                    <h3>Motors</h3>
                    <div id="motor-inputs" class="mt-4"></div>
                    <button type="button" onclick="addMotorInput()" class="header-btn accent-btn mt-2">
                        <i class="fas fa-plus"></i> Add Motor
                    </button>
                </div>

                <div class="mt-4">
                    <button onclick="saveFarm()" class="header-btn primary-btn">
                        <i class="fas fa-save"></i> Save Farm
                    </button>
                </div>
            </div>
        </section>

        <!-- Farm List Section -->
        <section id="farm-list-section" class="content-section hidden">
            <h2 class="section-title">Farm List</h2>
            <div class="form-card">
                <button onclick="listFarms()" class="header-btn accent-btn mb-4">
                    <i class="fas fa-sync"></i> Refresh Farm List
                </button>
                <div id="farm-list"></div>
            </div>
        </section>

        <!-- Farm Details Section -->
        <section id="farm-details-section" class="content-section hidden">
            <h2 class="section-title">Farm Details</h2>
            <div class="form-card">
                <div class="form-group" style="display: flex; gap: 10px;">
                    <input type="number" id="farm-id" placeholder="Farm ID" class="input-field" style="max-width: 200px;">
                    <button onclick="getFarmData()" class="header-btn primary-btn">
                        <i class="fas fa-search"></i> Get Farm Data
                    </button>
                </div>
                <div id="farm-data" class="mt-4"></div>
            </div>
        </section>

        <!-- Other sections (can be expanded as needed) -->
        <section id="users-section" class="content-section hidden">
            <h2 class="section-title">User Management</h2>
            <div class="form-card">
                <p>User management interface will be implemented here.</p>
            </div>
        </section>

        <section id="motors-section" class="content-section hidden">
            <h2 class="section-title">Motor Management</h2>
            <div class="form-card">
                <p>Motor management interface will be implemented here.</p>
            </div>
        </section>

        <section id="valves-section" class="content-section hidden">
            <h2 class="section-title">Valve Management</h2>
            <div class="form-card">
                <p>Valve management interface will be implemented here.</p>
            </div>
        </section>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const API_BASE_URL = 'http://127.0.0.1:8000/farm/';
        let motorCount = 0;

        // Check authentication on page load
        $(document).ready(function() {
            const token = localStorage.getItem('adminToken');
            if (!token) {
                window.location.href = '/adminpage';
                return;
            }

            // Add token to all AJAX requests by default
            $.ajaxSetup({
                headers: {
                    'Authorization': 'Token ' + token
                }
            });

            // Load user data for owner selection
            loadOwners();

            // Load dashboard data
            loadDashboardData();

            // Add first motor input in create farm form
            addMotorInput();

            // Set up navigation
            setupNavigation();

            // Simulate some recent activity
            loadRecentActivity();
        });

        function setupNavigation() {
            $('.nav-link').click(function(e) {
                e.preventDefault();
                const section = $(this).data('section');
                showSection(section);
            });
        }

        function showSection(sectionId) {
            // Hide all sections
            $('.content-section').addClass('hidden');

            // Remove active class from all nav links
            $('.nav-link').removeClass('active');

            // Show selected section
            $(`#${sectionId}-section`).removeClass('hidden');

            // Add active class to nav link
            $(`.nav-link[data-section="${sectionId}"]`).addClass('active');

            // Load section-specific data
            if (sectionId === 'farm-list') listFarms();
            if (sectionId === 'dashboard') loadDashboardData();
        }

        function toggleDrawer() {
            const drawer = document.getElementById('drawer');
            const content = document.getElementById('content');
            drawer.classList.toggle('open');
            content.classList.toggle('shifted');
        }

        function logout() {
            localStorage.removeItem('adminToken');
            window.location.href = '/adminpage';
        }

        function navigateToAdminSignup() {
            window.location.href = '/admin-signup';
        }

        function loadDashboardData() {
            $.ajax({
                url: `${API_BASE_URL}farms/`,
                method: 'GET',
                success: function(farms) {
                    $('#total-farms').text(farms.length);
                    const totalMotors = farms.reduce((sum, farm) => sum + farm.motors.length, 0);
                    $('#total-motors').text(totalMotors);
                    const totalValves = farms.reduce((sum, farm) => sum + farm.motors.reduce((vSum, motor) => vSum + (motor.valves ? motor.valves.length : 0), 0), 0);
                    $('#total-valves').text(totalValves);
                },
                error: function(xhr) {
                    alert('Error loading dashboard data: ' + xhr.responseText);
                }
            });
        }

        function loadOwners() {
            $.ajax({
                url: `http://127.0.0.1:8000/users/`,
                method: 'GET',
                success: function(users) {
                    const ownerSelect = $('#farm-owner');
                    if (!users || users.length === 0) {
                        $('#owner-error').text('No users found');
                        return;
                    }
                    users.forEach(user => {
                        ownerSelect.append(
                            `<option value="${user.id}">${user.email} (${user.role})</option>`
                        );
                    });
                    $('#owner-error').text('');
                },
                error: function(xhr) {
                    $('#owner-error').text(`Failed to load owners: ${xhr.status} - ${xhr.statusText}`);
                }
            });
        }

        function loadRecentActivity() {
            // This would be replaced with actual API call in production
            const activities = [
                { icon: 'fa-leaf', title: 'New farm "Central Farm" created', time: '15 minutes ago' },
                { icon: 'fa-cog', title: 'Motor #3524 was turned on', time: '1 hour ago' },
                { icon: 'fa-tint', title: 'Valve #127 status changed to active', time: '2 hours ago' },
                { icon: 'fa-user', title: 'New user added as farm owner', time: '1 day ago' }
            ];

            let html = '<div class="activity-list">';
            activities.forEach(activity => {
                html += `
                    <div class="activity-item">
                        <div class="activity-icon"><i class="fas ${activity.icon}"></i></div>
                        <div class="activity-content">
                            <div class="activity-title">${activity.title}</div>
                            <div class="activity-time">${activity.time}</div>
                        </div>
                    </div>
                `;
            });
            html += '</div>';

            $('#activity-list').html(html);
        }

        function addMotorInput(motor = null) {
            motorCount++;
            const motorHtml = `
                <div class="motor-item" id="motor-${motorCount}">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
                        <div class="form-group">
                            <input type="hidden" id="motor-id-${motorCount}" value="${motor?.id || ''}">
                            <input type="number" id="UIN-${motorCount}" value="${motor?.UIN || ''}" placeholder="UIN" class="input-field" onblur="checkUIN(${motorCount}, '${motor?.id || ''}')">
                            <span id="uin-error-${motorCount}" class="error-text"></span>
                        </div>
                        <div class="form-group">
                            <select id="motor-type-${motorCount}" class="input-field">
                                <option value="single_phase" ${motor?.motor_type === 'single_phase' ? 'selected' : ''}>Single Phase</option>
                                <option value="double_phase" ${motor?.motor_type === 'double_phase' ? 'selected' : ''}>Double Phase</option>
                                <option value="triple_phase" ${motor?.motor_type === 'triple_phase' ? 'selected' : ''}>Triple Phase</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <input type="number" id="valve-count-${motorCount}" placeholder="Valve Count" min="1" required value="${motor?.valve_count || ''}" class="input-field">
                        </div>
                    </div>
                    <button type="button" onclick="$('#motor-${motorCount}').remove()" class="header-btn danger-btn" style="margin-top: 10px;">
                        <i class="fas fa-trash"></i> Remove Motor
                    </button>
                </div>
            `;
            $('#motor-inputs').append(motorHtml);
        }

        function checkUIN(count, currentMotorId) {
            const uinInput = $(`#UIN-${count}`);
            const uinValue = uinInput.val();
            const errorSpan = $(`#uin-error-${count}`);

            if (!uinValue) {
                errorSpan.text('');
                return;
            }

            $.ajax({
                url: `${API_BASE_URL}motors/`,
                method: 'GET',
                success: function(motors) {
                    const existingMotor = motors.find(motor => motor.UIN == uinValue && motor.id != currentMotorId);
                    if (existingMotor) {
                        errorSpan.text('UIN already taken');
                        alert(`The UIN ${uinValue} is already taken by Motor ID: ${existingMotor.id}`);
                        uinInput.val(''); // Clear the input
                    } else {
                        errorSpan.text('');
                    }
                },
                error: function(xhr) {
                    errorSpan.text(`Error checking UIN: ${xhr.statusText}`);
                }
            });
        }

        function saveFarm() {
            const farmId = $('#farm-edit-id').val();
            const motors = [];

            let hasError = false;
            $('#motor-inputs .motor-item').each(function() {
                const motorUIN_Input = $(this).find('input[id^="UIN-"]');
                const motorTypeSelect = $(this).find('select[id^="motor-type-"]');
                const valveCountInput = $(this).find('input[id^="valve-count-"]');
                const motorIdInput = $(this).find('input[id^="motor-id-"]');

                const motorUIN = motorUIN_Input.val();
                const motorType = motorTypeSelect.val();
                const valveCount = parseInt(valveCountInput.val());
                const motorId = motorIdInput.val();

                if (isNaN(valveCount) || valveCount < 1) {
                    alert(`Please enter a valid valve count for motor`);
                    hasError = true;
                    return false; // Break the .each loop
                }

                motors.push({
                    UIN: motorUIN,
                    id: motorId || undefined,
                    motor_type: motorType,
                    valve_count: valveCount
                });
            });

            if (hasError) return;
            if (motors.length === 0) {
                alert('Please add at least one motor');
                return;
            }

            const farmData = {
                name: $('#farm-name').val() || 'Unnamed Farm',
                location: $('#farm-location').val() || 'Unknown Location',
                owner: parseInt($('#farm-owner').val()),
                motors: motors
            };

            // Continuing from where the code was cut off

            const method = farmId ? 'PUT' : 'POST';
            const url = farmId ? `${API_BASE_URL}farms/${farmId}/` : `${API_BASE_URL}farms/`;

            $.ajax({
                url: url,
                method: method,
                contentType: 'application/json',
                data: JSON.stringify(farmData),
                success: function(response) {
                    alert(`Farm ${farmId ? 'updated' : 'created'} successfully!`);
                    resetFarmForm();
                    showSection('farm-list');
                    listFarms();
                },
                error: function(xhr) {
                    alert(`Error ${farmId ? 'updating' : 'creating'} farm: ${xhr.responseText}`);
                }
            });
        }

        function resetFarmForm() {
            $('#farm-edit-id').val('');
            $('#farm-name').val('');
            $('#farm-location').val('');
            $('#farm-owner').val('');
            $('#motor-inputs').empty();
            addMotorInput();
        }

        function listFarms() {
            $.ajax({
                url: `${API_BASE_URL}farms/`,
                method: 'GET',
                success: function(farms) {
                    let html = '';
                    if (farms.length === 0) {
                        html = '<p>No farms found. <a href="#" onclick="showSection(\'create-farm\')">Create a farm</a>.</p>';
                    } else {
                        farms.forEach(farm => {
                            html += `
                                <div class="farm-item">
                                    <div class="farm-title">${farm.name}</div>
                                    <div class="farm-subtitle">${farm.location} | Owner: ${farm.owner_email || 'Unknown'}</div>
                                    <div>Motors: ${farm.motors.length} | Total Valves: ${farm.motors.reduce((sum, motor) => sum + (motor.valve_count || 0), 0)}</div>
                                    <div class="action-buttons">
                                        <button onclick="editFarm(${farm.id})" class="header-btn">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <button onclick="viewFarm(${farm.id})" class="header-btn primary-btn">
                                            <i class="fas fa-eye"></i> View
                                        </button>
                                        <button onclick="deleteFarm(${farm.id})" class="header-btn danger-btn">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            `;
                        });
                    }
                    $('#farm-list').html(html);
                },
                error: function(xhr) {
                    $('#farm-list').html(`<p class="error-text">Error loading farms: ${xhr.responseText}</p>`);
                }
            });
        }

        function editFarm(farmId) {
            $.ajax({
                url: `${API_BASE_URL}farms/${farmId}/`,
                method: 'GET',
                success: function(farm) {
                    $('#farm-edit-id').val(farm.id);
                    $('#farm-name').val(farm.name);
                    $('#farm-location').val(farm.location);
                    $('#farm-owner').val(farm.owner);

                    // Clear existing motor inputs
                    $('#motor-inputs').empty();

                    // Add motor inputs for existing motors
                    if (farm.motors && farm.motors.length > 0) {
                        farm.motors.forEach(motor => addMotorInput(motor));
                    } else {
                        addMotorInput();
                    }

                    showSection('create-farm');
                },
                error: function(xhr) {
                    alert(`Error loading farm: ${xhr.responseText}`);
                }
            });
        }

        function viewFarm(farmId) {
            $('#farm-id').val(farmId);
            getFarmData();
            showSection('farm-details');
        }

        function getFarmData() {
            const farmId = $('#farm-id').val();
            if (!farmId) {
                alert('Please enter a Farm ID');
                return;
            }

            $.ajax({
                url: `${API_BASE_URL}farms/${farmId}/`,
                method: 'GET',
                success: function(farm) {
                    let html = `
                        <div class="farm-item">
                            <div class="farm-title">${farm.name}</div>
                            <div class="farm-subtitle">${farm.location} | Owner: ${farm.owner_email || 'Unknown'}</div>
                            <h3 class="mt-4">Motors</h3>
                    `;

                    if (farm.motors && farm.motors.length > 0) {
                        farm.motors.forEach(motor => {
                            html += `
                                <div class="motor-item">
                                    <div class="motor-title">Motor ID: ${motor.id}</div>
                                    <div>UIN: ${motor.UIN}</div>
                                    <div>Type: ${formatMotorType(motor.motor_type)}</div>
                                    <div>Status: <span class="${motor.status === 'active' ? 'text-success' : 'text-danger'}">${motor.status}</span></div>
                                    <div>Valves: ${motor.valve_count || 0}</div>
                            `;

                            if (motor.valves && motor.valves.length > 0) {
                                html += `<div class="mt-3"><strong>Valve Details:</strong></div>`;
                                motor.valves.forEach(valve => {
                                    html += `
                                        <div class="valve-item">
                                            <div>Valve ID: ${valve.id} | Position: ${valve.position}</div>
                                            <div>Status: <span class="${valve.status === 'active' ? 'text-success' : 'text-danger'}">${valve.status}</span></div>
                                        </div>
                                    `;
                                });
                            }

                            html += `
                                    <div class="action-buttons mt-3">
                                        <button onclick="toggleMotorStatus(${motor.id}, '${motor.status === 'active' ? 'inactive' : 'active'}')" class="header-btn ${motor.status === 'active' ? 'danger-btn' : 'accent-btn'}">
                                            <i class="fas ${motor.status === 'active' ? 'fa-power-off' : 'fa-play'}"></i>
                                            ${motor.status === 'active' ? 'Turn Off' : 'Turn On'}
                                        </button>
                                        <button onclick="editMotor(${motor.id})" class="header-btn">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                    </div>
                                </div>
                            `;
                        });
                    } else {
                        html += '<p>No motors found for this farm.</p>';
                    }

                    html += `
                        <div class="action-buttons mt-4">
                            <button onclick="editFarm(${farm.id})" class="header-btn primary-btn">
                                <i class="fas fa-edit"></i> Edit Farm
                            </button>
                            <button onclick="deleteFarm(${farm.id})" class="header-btn danger-btn">
                                <i class="fas fa-trash"></i> Delete Farm
                            </button>
                        </div>
                    </div>`;

                    $('#farm-data').html(html);
                },
                error: function(xhr) {
                    if (xhr.status === 404) {
                        $('#farm-data').html('<p class="error-text">Farm not found</p>');
                    } else {
                        $('#farm-data').html(`<p class="error-text">Error loading farm data: ${xhr.responseText}</p>`);
                    }
                }
            });
        }

        function formatMotorType(type) {
            if (!type) return 'Unknown';
            return type.replace('_', ' ').replace(/\b\w/g, l => l.toUpperCase());
        }

        function toggleMotorStatus(motorId, newStatus) {
            $.ajax({
                url: `${API_BASE_URL}motors/${motorId}/`,
                method: 'PATCH',
                contentType: 'application/json',
                data: JSON.stringify({ status: newStatus }),
                success: function() {
                    alert(`Motor status updated successfully to ${newStatus}`);
                    const farmId = $('#farm-id').val();
                    if (farmId) getFarmData();
                },
                error: function(xhr) {
                    alert(`Error updating motor status: ${xhr.responseText}`);
                }
            });
        }

        function editMotor(motorId) {
            // This would typically open a modal or navigate to a motor edit page
            alert('Motor editing functionality will be implemented soon.');
        }

        function deleteFarm(farmId) {
            if (!confirm('Are you sure you want to delete this farm? This action cannot be undone.')) {
                return;
            }

            $.ajax({
                url: `${API_BASE_URL}farms/${farmId}/`,
                method: 'DELETE',
                success: function() {
                    alert('Farm deleted successfully');
                    listFarms();
                    loadDashboardData();
                },
                error: function(xhr) {
                    alert(`Error deleting farm: ${xhr.responseText}`);
                }
            });
        }

        // Additional functions for other sections as needed
        function editValve(valveId) {
            alert(`Valve editing functionality for valve ID ${valveId} will be implemented soon.`);
        }

        function toggleValveStatus(valveId, newStatus) {
            $.ajax({
                url: `${API_BASE_URL}valves/${valveId}/`,
                method: 'PATCH',
                contentType: 'application/json',
                data: JSON.stringify({ status: newStatus }),
                success: function() {
                    alert(`Valve status updated successfully to ${newStatus}`);
                    const farmId = $('#farm-id').val();
                    if (farmId) getFarmData();
                },
                error: function(xhr) {
                    alert(`Error updating valve status: ${xhr.responseText}`);
                }
            });
        }
    </script>
</body>
</html>